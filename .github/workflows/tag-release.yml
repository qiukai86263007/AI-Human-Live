name: Build

on:
    push:
        tags:
            - v*.*.*

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
          include:
              - os: ubuntu-latest
                arch: [arm64, amd64]
              - os: macos-latest
                arch: [arm64, amd64]
              - os: windows-latest
                arch: [arm64, amd64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build Prepare (macOS)
        if: runner.os == 'macOS'
        run: |
            brew install python-setuptools

      - name: Cert Prepare (macOS)
        if: runner.os == 'macOS'
        env:
            MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
            MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        run: |
            echo "find-identity"
            security find-identity -p codesigning
            echo "$MACOS_CERTIFICATE" | base64 --decode > certificate.p12
            security create-keychain -p "" build.keychain
            security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
            security list-keychains -s build.keychain
            security set-keychain-settings -t 3600 -u build.keychain
            security unlock-keychain -p "" build.keychain
            echo "find-identity"
            security find-identity -v -p codesigning build.keychain
            echo "find-identity"
            security find-identity -p codesigning
            echo "set-key-partition-list"
            security set-key-partition-list -S apple-tool:,apple: -s -k "" -l "AigcPanelKey" -t private build.keychain
            echo "find-certificate"
            security find-certificate -a -c "AigcPanelKey" -p
            echo "export"
            security export -k build.keychain -t certs -f x509 -p -o certificate.cer
            echo "add-trusted-cert"
            sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain certificate.cer
            echo "find-identity"
            security find-identity -p codesigning

      - name: Install Dependencies
        run: npm install

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Assets
        uses: softprops/action-gh-release@v2
        with:
            draft: false
            prerelease: false
            fail_on_unmatched_files: false
            files: |
                dist-release/*.exe
                dist-release/*.dmg
                dist-release/*.AppImage
                dist-release/*.deb
        env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

